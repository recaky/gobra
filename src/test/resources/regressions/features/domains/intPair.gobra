// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package main

type intPair domain {
    func fst(intPair) int
    func snd(intPair) int
    func pair(int, int) intPair

    axiom {
      forall p intPair :: {fst(p)}{snd(p)} p == pair(fst(p),snd(p))
    } // pair

    axiom {
      forall l, r int :: {pair(l,r)} l == fst(pair(l,r)) && r == snd(pair(l,r))
    }
    
}

func test() {
    x := pair(1,2)
    assert fst(x) == 1
    y := tamto(1,2)
    assert noco(y) == 1
}

func test2() {
    x@ := pair(1,2)
    assert fst(x) == 1

}

type ejha domain {
    func noco(ejha) int
    func toto(ejha) int
    func tamto(int, int) ejha
    

    axiom {
      forall p ejha :: {noco(p)}{toto(p)} p == tamto(noco(p),toto(p))
    } // pair
   axiom {
      forall l, r int :: {pair(l,r)} l == fst(pair(l,r)) && r == snd(pair(l,r))
    }

    axiom {
      forall l, r int :: {tamto(l,r)} l == noco(tamto(l,r)) && r == toto(tamto(l,r))
    }
    
}


func testik() {
    x := tamto(1,2)
    assert noco(x) == 1
}

func testik2() {
    x@ := tamto(1,2)
    assert noco(x) == 1
}